http://web-analytics-or-die.org/gaPlugin/

2011/04/11 changed
-------
デフォルトの状態をCoC的な感じで作り直しました。
最低限の機能はアカウントの設定のみで完了します。
あとは、３つのファイルを読み込むだけという風にしました。
もちろん、細かい設定もすることができます。
高度な機能を使いたい場合は、sample_jsフォルダの２つのファイルを参考にしてカスタマイズしてください。

デフォルトの状態では以下のように設定されています。
*カスタム変数
Slot1 : トップディレクトリ名
Slot2 : セカンドディレクトリ名
Slot3 : GETパラメータ(cid)
例：index.html?cid=hoge
であれば、hogeをカスタム変数に格納します。
Convention over Configurationです。cidを使ってください。
もちろん設定ファイル上で設定することはできますが。
Slot4 : 曜日
次期GAだと、レポートで採用されているようなので必要ないかも
Slot5: 時間帯
セッションの最後にアクセスした時間帯を記録します。

外部リンククリック、DLリンククリックはカスタムイベントで自動的に取得します。

gaConf.jsのアカウント情報を修正すればすぐに利用できます。


＊それ以外の変更
dirGroup でトップディレクトリ以外も指定できるように変更しました。
詳しくは下のdirGroupの項を参照。
併せて、ディレクトリ指定でもバーチャルページビューが利用できるようにしました。

timeToCompleteで時間だけではなく、クリック数も取得できるようにしました。

movieTrackが使いにくかったので、完全に修正しました。
設定ファイルで指定した全てのURLで動作するようにしました。


2011/03/12 changed
-------
gaPlugin_start.jsを修正しました。
xmlHttpRequestを使って、設定用JSONファイル(gaConf.json)を読み込む方法を止めました。
普通にHTML上の3つのJSファイルを読み込むという方法にします。
JSON.parseでは今の設定ファイルを読み込めず、eval()を使わざるを得ない状況だったので、
それならいっそのこと普通の方法に戻そうということで、HTMLファイルから読み込むようにしました。

利用方法は<head>タグ内で以下の3行を追加してください。
	<script type="text/javascript" src='/ga/gaPlugin.js'></script>
	<script type="text/javascript" src='/ga/gaConf.js'></script>
	<script type="text/javascript" src='/ga/gaPlugin_start.js'></script>
(src=""は3つのJSファイルを置いたパスを指定してください。)

-------
2011/02/10 changed
----
CV -> 対象範囲をパス名までからGETパラメータ(?以下）までに変更
timeToComplete -> cookieのExpire指定がおかしかったので修正
getParam -> パラメータが無いときもデータを送信していたので、送信しないように変更
メソッド：virtualPVPlusを追加
----

■特徴
・データ取得機能の強化
Google Analyticsに不足している機能を気軽に補完することができます。
外部サイトリンクのクリック数や曜日別のセッション数など、あると便利なデータを簡単に取得できるようになります。

・複数アカウントの対応
GAが対応している複数アカウントをサポートしました。
2つ以上のアカウントを使って自在にデータを取得することができます。
例えば、1つ目は通常のページビューを取得し、2つ目はグループ化したページビューを取得するということができます。
当然、1アカウント5個までと制限されているカスタム変数も、2アカウントなら10個使うことができます。

・柔軟なカスタマイズ
GAがサポートする範囲内であれば、柔軟にカスタマイズすることができます。
例えば、5個のカスタム変数全てをコンテンツグループに利用することもできます。
通常の_setCustomVarを利用して、個別にカスタム変数を利用することも可能です。

・プラグインを一切使っていません
jQueryやprototype.jsなどのプラグインを一切使わずに作成しています。
シンプルな設計になっているので、プラグインを使った場合と比べて、高速に動作するはずです。また、プラグイン同士の衝突も回避できます。

・設定ファイルで一括管理
基本的に機能を全て設定ファイルで管理するので、各ページごとに異なったタグを入れる必要がありません。全ページ同じタグで簡単に導入することができます。
（一部例外あり）


■機能一覧
・外部サイトリンク、ダウンロードリンクの自動取得
外部サイトのクリックや、ファイルのダウンロードクリックを自動的に取得することができます。もう<a>タグ内にonClick=~なんて書く必要がありません。

・コンテンツグループの設定
コンテンツをグループ化して取得することができます。
通常のレポートでは不可能だったグループ別のセッション数を取得することができます。

・タスク終了までの時間取得
あるページの表示から、あるページの表示までにかかった時間を取得できます。
例えば、フォームの入力ページの表示から、入力完了ページまでの時間を取得できます。

・ムービー閲覧時間の取得
15秒おきにカスタムイベントリクエストを送信することによって、ムービー等の閲覧時間を取得できるようになります。
当然直帰したユーザーも含めた滞在時間が取得できます。

・グループ化バーチャルページビュー
通常のtrackPageviewsの代わりに、コンテンツグループを利用することができます。
コンテンツグループをページビューとみなすことによって、GAのパス解析機能を使うことが可能です。
つまり、あるコンテンツグループの次に見たグループ、ランディングとなったグループなどを追跡できます。
複数アカウント利用と組み合わせると強力な機能になります。

・コンバージョンしたユーザーの特定
コンバージョンしたユーザーを追跡することができます。
GAレポート画面上でもコンバージョンした追跡することは可能ですが、カスタム変数を使っているため、セッションを越えたユーザー単位で追跡することができます。

・パラメータ取得
指定したパラメータを持ったURLを表示すると、そのパラメータの値を取得します。
キャンペーン等の簡易取得に利用できます。

・ディレクトリグループ
コンテンツグループは設定するのが面倒という人には、トップディレクトリをコンテンツグループとして設定することができます。

・_link の自動設定
クロスドメイン解析に必要な_linkも自動的に設定することができます。
それぞれのリンクにonClick~と書く必要はありません。

・曜日の取得
曜日を自動的にカスタム変数に格納します。
曜日別にデータを見ることが可能になります。

・時間帯の取得
朝、昼、夕方などページが見られた時間帯を自動的に取得します。


■利用方法
A. 動作ファイル(gaPlugin_start.js)の記述
1. コンフィグファイルの読み込み
//20110311 changed
HTML上でコンフィグファイル:gaConf.jsを読み込んでください


2.トラックネームの設定
	var _gaTrackName = "_firstTracker";
マルチアカウントトラッキングに必要なトラッカーの名称を設定します。
名称はどんなものでも構いません。

3.計測用オブジェクトの作成
	var firstTracker = new GaPlugin(gaConf.cnf, _gaTrackName);

4.各種設定
クロスドメイン用の設定など各種設定してください。

5.機能のON
利用する機能を定義してください。

6.trackPageview
データを送信します。
	_gaq.push([_gaTrackName+'._trackPageview']);
メソッド：virtualPageviewsを利用することもできます。
（併用はできません）

7.onloadイベントの設定
autoLinkなどonloadイベントを設定します。

8.2つめのアカウント設定
複数アカウントを利用する場合は、2つめ以降のオブジェクトを生成してください。
方法は1-7と同様です。


B.HTMLファイルへの記述: 2011/03/12 changed
gaPlugin.js、コンフィグファイル(gaConf.js)と動作ファイル(gaPlugin_start.js)を読み込んでください。
	<script type="text/javascript" src='/ga/gaPlugin.js'></script>
	<script type="text/javascript" src='/ga/gaConf.js'></script>
	<script type="text/javascript" src='/ga/gaPlugin_start.js'></script>
(3つのファイルを/ga/上に置いた場合）

-------------------------------------------------------------------

■gaPluginのAPI

API一覧
new(コンストラクタ）
.contentGroup
.dirGroup
.getParam
.cv
.dayTime
.weekDay
.virtualPageviews
.autoLink
.timeToComplete
.allowLinker
.movieTrack
.virtualDirGroup

--------------------------------
new(コンストラクタ）  (conf, trackName)
*機能：
計測用オブジェクトを作成します。

*引数：
conf : 全般設定のコンフィグ
trackName : 任意の文字列

*confの形式：
 	//全般設定
	cnf : {
	//アカウント名 : UA-XXXXXX-Xを入力してください。
		account : "UA-XXXXXX-X",
	//ページレベルでのカスタム変数のスロット名を配列形式で入力してください。
		pageLevel : [1]
	},

--------------------------------
.contentGroup(slot,confCg);
*機能：
設定ファイルに記載したURLルールに基づいて、コンテンツをグループ化します。
カスタム変数を利用します。

*引数：
slot : カスタム変数のスロット番号（1-5）
confCg : コンテンツグループのコンフィグ

*confCgの形式：
	//コンテンツグループの設定
	cg : {
		//コンテンツグループに利用するカスタム変数のカテゴリを指定してください。
		category : "ContentGroup",
		//コンテンツグループのスコープを設定してください。（デフォルト3 -> PageLevel)
		scope : 3,
		//コンテンツグループを正規表現で指定してください
		//グループ名：/グループ定義/
		pages : {
			groupA : /.+sampling.+/,
			groupB : /ga_test.html$/,
			groupC : /\/test\/ga\//,
			topPage : /^\/$|^\/index.html$/
		}
	},
	

--------------------------------
2011/04/07 changed
.dirGroup(slot, depth);
*機能：
指定したディレクトリでグループ化します。

カスタム変数を利用します。

*引数：
slot : カスタム変数のスロット番号（1-5）
depth : 階層の指定（省略可）

ルートディレクトリの場合は「top」となります。
depthを指定しなかった場合は、トップディレクトリでグループ化されます。
"depth"は2以上の整数をしていしてください。
階層が2以上の場合は、"_"（アンダースコア）をディリミタとして、
各階層名をくっつけたものを値とします。

例）dirGroup(2,2) の場合
http://sample.com/hoge/fuga/goge.html
→ カスタム変数スロット2に
hoge_fuga
が格納される。

http://smaple.com/hoge/index.html
→ カスタム変数スロット2に
hoge
が格納される。




--------------------------------
.getParam(slot, confPar);
*機能：
設定ファイルに指定したパラメータを持っている場合、その値をカスタム変数に保存します。
カスタム変数を利用します。
//20110210changed パラメータがなくてもデータを送信していたので、送信しないように修正しました。

*引数：
slot : カスタム変数のスロット番号（1-5）
confPar : コンテンツグループのコンフィグ

*confParの形式：
	//GETパラメータの取得
	getPar : {
		//カスタム変数のカテゴリ名を指定してください。
		category : "Parameter",
		//スコープを指定してください（デフォルト2 -> Session Level）
		scope : 2,
		//取得するパラメータ名を指定してください。
		paramName : "cid"
	},

--------------------------------
.cv(slot, confCv)
*機能：
設定ファイルに指定したURLのページを閲覧したとき、コンバージョンユーザーとして定義することができます。
カスタム変数を利用します。

*引数：
slot : カスタム変数のスロット番号（1-5）
confCv : コンテンツグループのコンフィグ

*confCvの形式：
	//コンバージョンユーザーの取得
	cv : {
		//カスタム変数のカテゴリ名を指定してください。		
		category : "conversed",
		//スコープを指定してください（デフォルト1 -> User Level）		
		scope : 1,
		//コンバージョンしたユーザーにつける名前を指定してください。		
		cvName : "conversed",
		//コンバージョンとするURLを正規表現で指定してください。
		//20110210changed. 指定対象にGETパラメータを含めました。ｓ
		urlString : [/\/test\/ga\/index\.html/, /\/test\/ga\/index2\.html/]
	},


--------------------------------
.dayTime(slot);
*機能：
アクセスした時間帯を記録します。
0時-5時：late night
5時-9時：early morning
9時-12時：morning
12時-15時：after noon
15時-18時：evening
18時-21時：late evening
21時-24時：night
として、定義されます。
ユーザー側の時間が記録されるため、時差がある場合はサーバー側と異なる時間帯が記録されます。
カスタム変数を利用します。

*引数：
slot : カスタム変数のスロット番号（1-5）

--------------------------------
.weekDay(slot);
*機能：
アクセスした曜日が記録されます。
ユーザー側の時間が記録されるため、時差がある場合はサーバー側と異なる曜日が記録されることがあります。
カスタム変数を利用します。

*引数：
slot : カスタム変数のスロット番号（1-5）

--------------------------------
.virtualPageviews(confCg);
*機能：
コンテンツグループをページビューとして、カウントします。
通常の_trackPageviewと併用できません。

*引数：
confCg : コンテンツグループのコンフィグ
（形式は.contentGroupの設定と同じです。）

----------------------------
.autoLink(confLink)
*機能：
外部サイトへのリンク、DLリンクを自動的に取得できるようになります。
カスタムイベントを利用します。

*引数：
confLink : オートリンクのコンフィグ
（省略することができます）

*confLinkの形式：
	//オートリンクの設定
	autoLink : {
		//除外するドメイン名を配列で指定してください。
		internalDomain : ["www.sample.com"],
		//
		category : {
			offSite : "OffSiteLink",
			download : "DownLoadLink"
		},
		//取得するDLファイルを設定
		dlFiles : {
			emailLink : /^mailto:(.+)$/i,
			pdf: /^(.+\.pdf)$/i,
			zip: /^(.+\.zip)$/i,
			PowerPoint: /^(.+\.pptx?)$/i,
			Excel: /^(.+\.xlsx?)$/i,
			Word: /^(.+\.docx?)$/i
		}	
	},


----------------------------
.timeToComplete(confTC)
*機能：
設定ファイルに記載したスタートページを表示してから、終了ページを表示するまでの時間をカウントします。
カスタムイベントを利用します。
//20110210changed クッキーのExpireがおかしかったので修正しました。


*引数：
confTC : timeToCompleteのコンフィグ

*confLinkの形式：
	//timeToCompleteの設定
	timeToComplete : {
		//カスタム変数のアクション名を指定してください。
		action : "timeToComplete_TEST",
		//計測開始URLを配列で指定してください。
		startUrl : [/ga\/start1\.html$/, /ga\/start2\.html$/],
		//計測終了URLを配列で指定してください。
		endUrl : [/ga\/end1\.html$/, /ga\/end2\.html$/],
		//利用するcookie名を指定してください。
		cookieName : "_utmTimeToComp"
	},
	

----------------------------
.allowLinker(confLinker)
*機能：
クロスドメインサイトの取得に必要な_linkを自動的に設定します。
_setAllowLinkerをtrueにしておく必要があります。
<a>タグのみ対応しています。
<form>タグでのPOSTによるサイト遷移については対応していません。

*引数：
confLinker : allowLinkerのコンフィグ

*confLinkerの形式：
	//Cross Domain用Trackingの設定
	allowLinker : {
		//許可するサイトのURLを指定してください。
		allow : ["www.sample.co.jp", "www.sample2.co.jp/"]
	}


--------------------------------
//20110210 added
.virtualPVPlus(seconds)
*機能：
引数で指定した秒数後に「パス名+_時間over」というページビューを送信します。
例：「/index.html_30over」
基本的には指定した時間以上経過した人を直帰としてみなさないようにするためのものです。
そのため、セッションの最初のページでのみ、動作するようにしています。
（30分の有効期限をもったcookieで管理しています。有効期限はページが開かれる度に更新されます）


*引数：
seconds : バーチャルPVが動作するまでの時間

//20110411 changed
movieTrack(confMovie)
*機能：
設定ファイルで指定したURLを表示したとき、１５秒おきにカスタムイベントを送信します。
送信間隔は変更することができます。
数字をインクリメントすることで、閲覧時間を取得する仕組みです。
window.onloadイベント内で利用してください。

* movieTrackの形式：
	//ムービー閲覧時間取得の設定
	movie : {
		//動作させるムービーページのURLを配列で指定してください。ルートディレクトリ配下。完全一致(index.htmlは削除されます）。
		//URLがカスタムイベントのアクション名になります。
		pageUrl : ["/gaPluginV2/movie/index.html", "/gaPluginV2/movie/index2.html"],
		//カスタム変数で利用するカテゴリ名を指定してください。
		category : "WatchingTime", 
		//最大計測時間を指定してください（秒）
		maxTime : 300,
		//データ送信間隔を指定してください（秒）
		interval : 15
	},



//20110411 added
. virtualDirGroup(depth)
*機能：
ディレクリをページビューとして、カウントします。
通常の_trackPageviewと併用できません。
引数でディレクトリの深さを指定することができます。

*引数：
depth : 指定する深さ（省略した場合はトップディレクトリ）
（形式は.contentGroupの設定と同じです。）



